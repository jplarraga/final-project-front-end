{"version":3,"sources":["components/Data/users.js","components/Context/UserContext.js","components/Data/transactions.js","components/Context/TransactionContext.js","components/Card/card.jsx","components/Main/Template/template.jsx","components/Main/home.jsx","components/TextField/textfield.js","components/Main/createaccount.jsx","components/Main/deposit.jsx","components/Main/withdraw.jsx","components/Main/alldata.jsx","App.js","reportWebVitals.js","index.js"],"names":["users","id","name","email","password","UserContext","createContext","UserProvider","children","useState","user","data","Provider","value","transactions","balance","TransactionContext","TransactionProvider","transaction","Card","props","className","bgcolor","txtcolor","style","maxWidth","header","title","text","body","status","Template","showImage","showBalance","showDeposit","showWithdraw","useContext","deposit","setDeposit","withdraw","setWithdraw","Number","totalState","setTotalState","validTransaction","setValidTransaction","src","alt","onSubmit","event","console","log","preventDefault","type","width","onChange","target","window","alert","disabled","Home","TextField","label","useField","field","meta","htmlFor","touched","error","autoComplete","component","CreateAccount","setUsers","validate","Yup","required","min","confirmPassword","oneOf","initialValues","validationSchema","values","resetForm","addUser","uuidv4","push","formik","isValid","isSubmitting","tabindex","Deposit","Withdraw","AllData","scope","map","App","to","height","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26d7ccc7.chunk.js","sourcesContent":["const users = [\n    {\n        id: 0,\n        name: \"Jane Doe\",\n        email: \"jane@me.com\",\n        password: \"Access123\"\n    },\n    {\n        id: 1,\n        name: \"Peter Parker\",\n        email: \"peter@mit.edu\",\n        password: \"Passcode321\"\n    },\n    {\n        id: 2,\n        name: \"John Smith\",\n        email: \"john@msn.com\",\n        password: \"Letmein33\"\n    }\n];\n\nexport default users;","import React, { createContext, useState } from \"react\";\nimport users from '../Data/users';\n\n\nconst UserContext = createContext();\n\n//const initialUser = {id:1, name:'Miguel', favoriteMovies:[1,2]}\n\nconst UserProvider = ({children}) => {\n    const [user, setUser] = useState(users);\n    const data = { user };\n\n\n\n    return (\n        <UserContext.Provider value={data}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport { UserProvider };\nexport default UserContext;","const transactions = \n[\n    {\n        id: 0,\n        balance: 1000,\n    }    \n    ];\n\n\n\nexport default transactions;","import React, { createContext, useState } from \"react\";\nimport transactions from '../Data/transactions';\n\nconst TransactionContext = createContext();\n\n//const initialData = {id:1, balance:100, deposit: 0, withdraw: 100}\n\nconst TransactionProvider = ({ children }) => {\n    const [data, setData] = useState(transactions);\n    const transaction = { data }\n    \n    return (\n        <TransactionContext.Provider value={transaction}>\n            { children }\n        </TransactionContext.Provider>\n    )\n}\n\n\n\n\nexport { TransactionProvider }\nexport default TransactionContext;","import React from 'react';\n\nfunction Card(props){\n    function classes(){\n            const bg = props.bgcolor ? ' bg-' + props.bgcolor : '';\n            const txt = props.txtcolor ? ' text-' + props.txtcolor: ' text-white';\n            return 'card mb-3 ' + bg + txt;\n    }\n    return(\n       <div className={classes()} style={{maxWidth: \"30rem\"}}>\n           <div className=\"card-header fs-1\">{props.header}</div>\n           <div className=\"card-body\">\n               {props.title && (<h5 className=\"card-title\">{props.title}</h5>)}\n               {props.text && (<p className=\"card-text\">{props.text}</p>)}\n               {props.body}\n               {props.status && (<div id=\"createStatus\">{props.status}</div>)}\n           </div>\n       </div>\n        \n    );\n}\n\nexport { Card };","import React, {useContext, useState} from \"react\";\nimport TransactionContext from \"../../Context/TransactionContext\";\nimport { Card } from '../../Card/card';\n\n\nfunction Template({\n    title,\n    bgcolor,\n    txtcolor,\n    header,\n    showImage,\n    showBalance,\n    showDeposit,\n    showWithdraw\n}) {\n\n    const { data } = useContext(TransactionContext);\n    const [deposit, setDeposit] = useState(0);\n    const [withdraw, setWithdraw] = useState(0);\n    const [totalState, setTotalState] = useState(Number([data[0].balance]));\n    const [validTransaction, setValidTransaction] = useState(true);\n\n\n    const handleDepositChange = (event) => {\n\n        if(Number(event.target.value) < 0){\n            window.alert(`Amount negative not permited`);\n            setDeposit(0);\n            setValidTransaction(true);\n        }\n        \n\n        if(deposit < 0) {    \n            setDeposit(0);\n            setValidTransaction(true);\n\n        } else {\n            setDeposit(Number(event.target.value));\n        }\n       \n        if(event.target.value <= 0) return;\n\n        setValidTransaction(false);\n    };\n\n    const handleWithdrawChange = (event) => {\n\n        if(Number(event.target.value) < 0){\n            window.alert(`Negative Amount not permited`);\n            setWithdraw(0);\n            setValidTransaction(true);\n        }\n        if(withdraw < 0) {\n            setWithdraw(0);\n            setValidTransaction(true);\n        } else {\n            setWithdraw(Number(event.target.value));\n        }\n        if(event.target.value <= 0 ) return;\n        setValidTransaction(true);\n\n        if(event.target.value > totalState) {\n            alert(`Your balance $ ${totalState} is insufficient to make this widthdraw`);\n            setValidTransaction(true);\n        } else {\n            setValidTransaction(false)\n        }\n    };\n\n\n   \n\n    const handleWithdrawSubmit = (event) =>{\n        let newTotal = totalState - withdraw;\n        setTotalState(newTotal);\n        console.log(totalState);\n        setValidTransaction(true);\n        event.preventDefault();\n    }\n\n    const handleDepositSubmit = (event) => {\n        let newDepositTotal = totalState + deposit;\n        setTotalState(newDepositTotal);\n        console.log(totalState);\n        \n        setValidTransaction(true);\n        event.preventDefault();\n    }\n\n    return(\n        <Card\n            title={title}\n            bgcolor={bgcolor}\n            txtcolor={txtcolor}\n            header={header}\n            body={\n                <div>\n                    {\n                        showImage ? (\n                        <>\n                        <img src=\"badbank.png\" className=\"img-fluid\" alt=\"badbank\"/>\n                        </>):(\n                        <>\n                        </>)\n                    }\n                    {\n                        showBalance ? (\n                        <>\n                            <div className=\"row mb-3\">\n                                <div className=\"col-auto\">\n                                    <label id=\"total\" className=\"form-label\">BALANCE</label>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <label id=\"total\">{totalState}</label>\n                                </div>\n                            </div>\n\n                        </>\n\n                        ):(\n                        <>\n                        </>)\n                    }\n                    {\n                        showWithdraw ? (\n                        <>\n                            <form onSubmit={handleWithdrawSubmit}>\n                                <div className=\"row mb-3\">\n                                    <label id=\"total\" className=\"form-label\">WITHDRAW AMOUNT</label>\n                                </div>\n                                <div className=\"row mb-3\">\n                                    <input id=\"number-input\" type=\"input\" width=\"200\" onChange={handleWithdrawChange}/>\n                                </div>\n                                <div className=\"row mb-3\">\n                                    <button  className=\"btn btn-secondary\" type=\"submit\" width=\"200\" value=\"Submit\" id=\"submit-input\" disabled={validTransaction}>WITHDRAW</button>\n                                </div>\n                            </form>\n                        </>\n                        ):(\n                        <>\n                        </>)\n                    }\n                    {\n                        showDeposit ? (\n                        <>\n                            <form onSubmit={handleDepositSubmit}>\n                                <div className=\"row mb-3\">\n                                    <label id=\"total\" className=\"form-label\">DEPOSIT AMOUNT</label>\n                                </div>\n                                <div className=\"row mb-3\">\n                                    <input id=\"number-input\" type=\"input\" width=\"200\" onChange={handleDepositChange}/>\n                                </div>\n                                <div className=\"row mb-3\">\n                                    <button  className=\"btn btn-secondary\" type=\"submit\" width=\"200\" value=\"Submit\" id=\"submit-input\" disabled={validTransaction}>DEPOSIT</button>\n                                </div>\n                            </form>\n                        </>\n                        ):(\n                        <>\n                        </>)\n                    }\n\n                </div>\n\n            }\n        \n        \n        />\n    )\n\n}\n\nexport { Template };","import React, { useContext } from \"react\";\nimport UserContext from \"../Context/UserContext\";\nimport { Template } from \"../Main/Template/template\"\n\nfunction Home() {\n\n    const { user } = useContext(UserContext);\n    return(\n        <div className=\"container-fluid\">\n\n        <Template\n            bgcolor=\"info\"\n            header=\"WELCOME TO BAD BANK\"\n            title=\"For all your banking needs\"\n            showImage={true}\n        />    \n       \n        </div>\n    );\n}\n\n\nexport { Home };\n","import React from \"react\";\nimport { ErrorMessage, useField } from \"formik\";\n\nconst TextField = ({ label, ...props }) => {\n\n    const [field, meta] = useField(props);\n    console.log(field, meta);\n    \n\n    return (\n        <div className=\"mb-2\">\n            <div className=\"containter mt-4\">\n            <label htmlFor={field.name}>{label}</label>\n            <input\n                className={`form-control shadow-none ${meta.touched && meta.error && 'is-invalid'}`}\n                {...field} {...props}\n                autoComplete=\"off\"\n            />\n            </div>\n            <div className=\"container \">\n            <ErrorMessage component=\"div\" name={field.name} className=\"error\"/>\n            </div>\n        </div>\n    )\n}\n\nexport { TextField };","import React, { useContext, useState } from \"react\";\nimport UserContext from \"../Context/UserContext\";\nimport { Card } from '../Card/card';\nimport { Formik, Form } from 'formik'; \nimport { TextField } from '../TextField/textfield';\nimport * as Yup from 'yup';\n\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nfunction CreateAccount() {\n    const { user } = useContext(UserContext);\n    \n    const [users, setUsers] = useState(user);\n    \n    const validate = Yup.object({\n        name: Yup.string()\n            .required('Required'),\n        \n        email: Yup.string().email('Write in email format')\n            .required('Email is required'),\n            \n\n        password: Yup.string()\n            .min(8, 'Must be at least 8 characters')\n            .required('Password is required'),\n\n        confirmPassword: Yup.string()\n            .oneOf([Yup.ref('password'), null], \"Confirm same Password\")\n            .required('Confirm password required'),\n    });\n    \n    const addUser = (user) => {\n    \n        setUsers([...users, { ...user}]);\n        console.log(users);\n\n    }\n\n    \n\n    return(\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col align-self-center\">\n                    <Card\n                        bgcolor=\"info\"\n                        header=\"Create An Account\"\n                        title=\"Fill in the following information\"\n                        body={\n                             (\n                            <>\n                                <Formik\n                                    initialValues={{\n                                        name: \"\",\n                                        email: \"\",\n                                        password: \"\",\n                                        confirmPassword:\"\"\n                                    }}\n                                    validationSchema={validate}\n                                    onSubmit={(values, {resetForm}) => {\n                                        addUser({\n                                            id: uuidv4(),\n                                            ...values,\n                                        });\n                                        user.push({\n                                            id: uuidv4(),\n                                            ...values,\n                                        });\n\n                                        resetForm({values: \"\"});\n                                    }}\n                                >\n                                    { formik => (\n                                        <div>\n                                        \n                                            <Form>\n                                                <TextField label=\"Name\" name=\"name\" type=\"text\"  />\n                                                <TextField label=\"Email\" name=\"email\" type=\"email\" />\n                                                <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                                                <TextField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\"/>\n                                                \n                                                <button className=\"btn btn-secondary mt-5\" type=\"submit\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" disabled={!formik.isValid || formik.isSubmitting} >Create Account</button>\n                                                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                                <div className=\"modal-dialog\">\n                                                    <div className=\"modal-content\">\n                                                    <div className=\"modal-header\">\n                                                        <h5 className=\"modal-title text-info\" id=\"exampleModalLabel\">ACCOUNT CREATED!!!</h5>\n                                                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                                                    </div>\n                                                    <div className=\"modal-body\">\n                                                        <p className=\"text-info\"> You have successfully created an account, would you like to create another one?</p>\n                                                    </div>\n                                                    <div className=\"modal-footer\">\n                                                        <button type=\"button\" className=\"btn btn-info text-white\" data-bs-dismiss=\"modal\">Yes Please!</button>\n                                                    </div>\n                                                    </div>\n                                                </div>\n                                                </div>\n                                            </Form>\n                                        </div>\n                                    )\n\n                                    }\n                                </Formik>\n\n                            </>\n                        )}\n                    />\n                </div>\n            </div>\n        </div>\n        \n    );\n}\n\n\nexport { CreateAccount };","import React, { useContext, useState } from \"react\";\nimport { Template } from '../Main/Template/template';\nimport TransactionContext from \"../Context/TransactionContext\";\nimport { Card } from '../Card/card';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nfunction Deposit() {\n    const { data } =useContext(TransactionContext);\n    return(\n        <div className=\"container\">\n            <Template\n                bgcolor=\"info\"\n                header=\"DEPOSIT\"\n                showBalance={true}\n                showDeposit={true}\n            />\n        </div>\n    );\n};\n\n\nexport { Deposit };","import React, {useContext, useState} from \"react\";\nimport { Template } from '../Main/Template/template';\nimport TransactionContext from \"../Context/TransactionContext\";\n\nfunction Withdraw() {\n    \n\n    return(\n        <div className=\"container\">\n            <Template\n                bgcolor=\"info\"\n                header=\"WITHDRAW\"\n                showBalance={true}\n                showWithdraw={true}\n            />\n        </div>\n    );\n}\n    \n\nexport { Withdraw };","import React, { useContext, useState } from \"react\";\nimport { Card } from \"../Card/card\";\nimport TransactionContext from \"../Context/TransactionContext\";\nimport UserContext from \"../Context/UserContext\";\n\nfunction AllData() {\n    const { user } = useContext(UserContext);\n\n    const[users, setUsers] = useState(user);\n\n    \n\n    return(\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col align-self-center\">\n                    <Card\n                        bgcolor=\"info\"\n                        header=\"ALL DATA\"\n                        body={(\n                            <>\n                            <table className=\"table table-info table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Email</th>\n                                        <th scope=\"col\">Password</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    { users.map((user) => {\n                                        return(\n                                            <tr key={user.id}>\n                                            <td>{user.name}</td>\n                                            <td>{user.email}</td>\n                                            <td>{user.password}</td>\n                                            </tr>\n                    \n                                        );\n                                    })}\n                                </tbody>\n                            </table>\n                            </>             \n                        )}\n                    />\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport { AllData };","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n } from \"react-router-dom\";\n\nimport { Home } from \"./components/Main/home\";\nimport { CreateAccount} from \"./components/Main/createaccount\";\nimport { Deposit } from \"./components/Main/deposit\";\nimport { Withdraw } from \"./components/Main/withdraw\";\nimport { AllData } from \"./components/Main/alldata\";\n\n\n\nimport { UserProvider } from './components/Context/UserContext';\nimport { TransactionProvider } from './components/Context/TransactionContext';\n\n\n\nfunction App() {\n\n \n  return (\n    <Router>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light shadow p-3 mb-5 bg-body rounded\">\n            <div className=\"container-fluid\">\n            <Link to=\"/\" className=\"navbar-brand text-info fs-1\">\n              <img src=\"badbankicon.png\" alt=\"bad bank\" width=\"65\" height=\"65\" className=\"d-inline-block align-text-center\"/>\n              Bad Bank\n              </Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav \">\n                  <li className=\"nav-item\">\n                      <Link to=\"/createaccount\" className=\"nav-link text-info\">Create Account</Link>\n                  </li>\n               \n                  <li className=\"nav-item\">\n                      <Link to=\"/deposit\" className=\"nav-link text-info\" >Deposit</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                      <Link to=\"/withdraw\" className=\"nav-link text-info\">Withdraw</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                      <Link to=\"/alldata\" className=\"nav-link text-info\">All Data</Link>\n                  </li>\n                </ul>\n            </div>\n            </div>\n        </nav>\n      \n      <Switch>\n        <UserProvider>\n          <TransactionProvider>\n            <Route path=\"/\" exact>\n              <Home/>\n            </Route>\n            <Route path=\"/createaccount\">\n              <CreateAccount/>\n            </Route>\n            <Route path=\"/deposit\">\n              <Deposit/>\n            </Route>\n            <Route path=\"/withdraw\">\n              <Withdraw/>\n            </Route>\n            <Route path=\"/alldata\">\n              <AllData/>\n            </Route>\n          </TransactionProvider>\n        </UserProvider>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}