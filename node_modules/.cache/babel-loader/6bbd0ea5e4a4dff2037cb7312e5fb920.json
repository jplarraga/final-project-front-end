{"ast":null,"code":"import _objectSpread from\"/Users/usuario/Desktop/CURSO_MERN/Proyecto Front End Banking Application/Banking_Application/banking-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/usuario/Desktop/CURSO_MERN/Proyecto Front End Banking Application/Banking_Application/banking-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/usuario/Desktop/CURSO_MERN/Proyecto Front End Banking Application/Banking_Application/banking-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";import UserContext from\"../Context/UserContext\";import{Card}from'../Card/card';import{Formik,Form}from'formik';import{TextField}from'../TextField/textfield';import*as Yup from'yup';import{v4 as uuidv4}from'uuid';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CreateAccount(){var _useContext=useContext(UserContext),user=_useContext.user;var _useState=useState(user),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];var validate=Yup.object({name:Yup.string().required('Required'),email:Yup.string().email('Write in email format').required('Email is required'),password:Yup.string().min(8,'Must be at least 8 characters').required('Password is required'),confirmPassword:Yup.string().oneOf([Yup.ref('password'),null],\"Confirm same Password\").required('Confirm password required')});var addUser=function addUser(user){setUsers([].concat(_toConsumableArray(users),[_objectSpread({},user)]));console.log(users);};return/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col align-self-center\",children:/*#__PURE__*/_jsx(Card,{bgcolor:\"info\",header:\"Create An Account\",title:\"Fill in the following information\",body:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{name:\"\",email:\"\",password:\"\",confirmPassword:\"\"},validationSchema:validate,onSubmit:function onSubmit(values,_ref){var resetForm=_ref.resetForm;addUser(_objectSpread({id:uuidv4()},values));user.push(_objectSpread({id:uuidv4()},values));resetForm({values:\"\"});},children:function children(formik){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(TextField,{label:\"Name\",name:\"name\",type:\"text\"}),/*#__PURE__*/_jsx(TextField,{label:\"Email\",name:\"email\",type:\"email\"}),/*#__PURE__*/_jsx(TextField,{label:\"Password\",name:\"password\",type:\"password\"}),/*#__PURE__*/_jsx(TextField,{label:\"Confirm Password\",name:\"confirmPassword\",type:\"password\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary mt-5\",type:\"submit\",\"data-bs-toggle\":\"modal\",\"data-bs-target\":\"#exampleModal\",disabled:!formik.isValid||formik.isSubmitting,children:\"Create Account\"}),/*#__PURE__*/_jsx(\"div\",{className:\"modal fade\",id:\"exampleModal\",tabindex:\"-1\",\"aria-labelledby\":\"exampleModalLabel\",\"aria-hidden\":\"true\",children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"modal-title text-info\",id:\"exampleModalLabel\",children:\"ACCOUNT CREATED!!!\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",\"data-bs-dismiss\":\"modal\",\"aria-label\":\"Close\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-info\",children:\" You have successfully created an account, would you like to create another one?\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-footer\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-info text-white\",\"data-bs-dismiss\":\"modal\",children:\"Yes Please!\"})})]})})})]})});}})})})})})});}export{CreateAccount};","map":{"version":3,"sources":["/Users/usuario/Desktop/CURSO_MERN/Proyecto Front End Banking Application/Banking_Application/banking-application/src/components/Main/createaccount.jsx"],"names":["React","useContext","useState","UserContext","Card","Formik","Form","TextField","Yup","v4","uuidv4","CreateAccount","user","users","setUsers","validate","object","name","string","required","email","password","min","confirmPassword","oneOf","ref","addUser","console","log","values","resetForm","id","push","formik","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport UserContext from \"../Context/UserContext\";\nimport { Card } from '../Card/card';\nimport { Formik, Form } from 'formik'; \nimport { TextField } from '../TextField/textfield';\nimport * as Yup from 'yup';\n\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nfunction CreateAccount() {\n    const { user } = useContext(UserContext);\n    \n    const [users, setUsers] = useState(user);\n    \n    const validate = Yup.object({\n        name: Yup.string()\n            .required('Required'),\n        \n        email: Yup.string().email('Write in email format')\n            .required('Email is required'),\n            \n\n        password: Yup.string()\n            .min(8, 'Must be at least 8 characters')\n            .required('Password is required'),\n\n        confirmPassword: Yup.string()\n            .oneOf([Yup.ref('password'), null], \"Confirm same Password\")\n            .required('Confirm password required'),\n    });\n    \n    const addUser = (user) => {\n    \n        setUsers([...users, { ...user}]);\n        console.log(users);\n\n    }\n\n    \n\n    return(\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col align-self-center\">\n                    <Card\n                        bgcolor=\"info\"\n                        header=\"Create An Account\"\n                        title=\"Fill in the following information\"\n                        body={\n                             (\n                            <>\n                                <Formik\n                                    initialValues={{\n                                        name: \"\",\n                                        email: \"\",\n                                        password: \"\",\n                                        confirmPassword:\"\"\n                                    }}\n                                    validationSchema={validate}\n                                    onSubmit={(values, {resetForm}) => {\n                                        addUser({\n                                            id: uuidv4(),\n                                            ...values,\n                                        });\n                                        user.push({\n                                            id: uuidv4(),\n                                            ...values,\n                                        });\n\n                                        resetForm({values: \"\"});\n                                    }}\n                                >\n                                    { formik => (\n                                        <div>\n                                        \n                                            <Form>\n                                                <TextField label=\"Name\" name=\"name\" type=\"text\"  />\n                                                <TextField label=\"Email\" name=\"email\" type=\"email\" />\n                                                <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                                                <TextField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\"/>\n                                                \n                                                <button className=\"btn btn-secondary mt-5\" type=\"submit\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" disabled={!formik.isValid || formik.isSubmitting} >Create Account</button>\n                                                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                                <div className=\"modal-dialog\">\n                                                    <div className=\"modal-content\">\n                                                    <div className=\"modal-header\">\n                                                        <h5 className=\"modal-title text-info\" id=\"exampleModalLabel\">ACCOUNT CREATED!!!</h5>\n                                                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                                                    </div>\n                                                    <div className=\"modal-body\">\n                                                        <p className=\"text-info\"> You have successfully created an account, would you like to create another one?</p>\n                                                    </div>\n                                                    <div className=\"modal-footer\">\n                                                        <button type=\"button\" className=\"btn btn-info text-white\" data-bs-dismiss=\"modal\">Yes Please!</button>\n                                                    </div>\n                                                    </div>\n                                                </div>\n                                                </div>\n                                            </Form>\n                                        </div>\n                                    )\n\n                                    }\n                                </Formik>\n\n                            </>\n                        )}\n                    />\n                </div>\n            </div>\n        </div>\n        \n    );\n}\n\n\nexport { CreateAccount };"]},"metadata":{},"sourceType":"module"}