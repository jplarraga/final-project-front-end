{"ast":null,"code":"var _jsxFileName = \"/Users/usuario/Desktop/CURSO_MERN/Proyecto Front End Banking Application/Banking_Application/banking-application/src/components/Main/createaccount.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport UserContext from \"../Context/UserContext\";\nimport { Card } from '../Card/card';\nimport { Formik, Form } from 'formik';\nimport { TextField } from '../TextField/textfield';\nimport * as Yup from 'yup';\nimport { v4 as uuidv4 } from 'uuid';\nimport users from \"../Data/users\";\nimport userEvent from \"@testing-library/user-event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount() {\n  _s();\n\n  const {\n    user\n  } = useContext(UserContext);\n  const [users, setUsers] = useState(user);\n  const validate = Yup.object({\n    name: Yup.string().required('Required'),\n    email: Yup.string().email('Write in email format').required('Email is required'),\n    password: Yup.string().min(8, 'Must be at least 8 characters').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], \"Confirm same Password\").required('Confirm password required')\n  });\n\n  const addUser = user => {\n    setUsers([...users, { ...user\n    }]);\n    console.log(users);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col align-self-center\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          bgcolor: \"info\",\n          header: \"Create An Account\",\n          title: \"Fill in the following information\",\n          body: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: {\n                name: \"\",\n                email: \"\",\n                password: \"\",\n                confirmPassword: \"\"\n              },\n              validationSchema: validate,\n              onSubmit: (values, {\n                resetForm\n              }) => {\n                addUser({\n                  id: uuidv4(),\n                  ...values\n                });\n                user.push({\n                  id: uuidv4(),\n                  ...values\n                });\n                resetForm({\n                  values: \"\"\n                });\n              },\n              children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Name\",\n                    name: \"name\",\n                    type: \"text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Email\",\n                    name: \"email\",\n                    type: \"email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Password\",\n                    name: \"password\",\n                    type: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Confirm Password\",\n                    name: \"confirmPassword\",\n                    type: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-secondary mt-5\",\n                    type: \"submit\",\n                    \"data-bs-toggle\": \"modal\",\n                    \"data-bs-target\": \"#exampleModal\",\n                    disabled: !formik.isValid || formik.isSubmitting || !formik.initialStatus,\n                    children: \"Create Account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"modal fade\",\n                    id: \"exampleModal\",\n                    tabindex: \"-1\",\n                    \"aria-labelledby\": \"exampleModalLabel\",\n                    \"aria-hidden\": \"true\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"modal-dialog\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"modal-content\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"modal-header\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            className: \"modal-title text-info\",\n                            id: \"exampleModalLabel\",\n                            children: \"ACCOUNT CREATED!!!\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 90,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            className: \"btn-close\",\n                            \"data-bs-dismiss\": \"modal\",\n                            \"aria-label\": \"Close\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 91,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 89,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"modal-body\",\n                          children: /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"text-info\",\n                            children: \" You have successfully attempted to create an account, would you like to create another one?\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 94,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 93,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"modal-footer\",\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            className: \"btn btn-info text-white\",\n                            \"data-bs-dismiss\": \"modal\",\n                            children: \"Yes Please!\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 97,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 96,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateAccount, \"Rs4+oYqUo/edM17anziTZZyCzMA=\");\n\n_c = CreateAccount;\nexport { CreateAccount };\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/usuario/Desktop/CURSO_MERN/Proyecto Front End Banking Application/Banking_Application/banking-application/src/components/Main/createaccount.jsx"],"names":["React","useContext","useState","UserContext","Card","Formik","Form","TextField","Yup","v4","uuidv4","users","userEvent","CreateAccount","user","setUsers","validate","object","name","string","required","email","password","min","confirmPassword","oneOf","ref","addUser","console","log","values","resetForm","id","push","formik","isValid","isSubmitting","initialStatus"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport UserContext from \"../Context/UserContext\";\nimport { Card } from '../Card/card';\nimport { Formik, Form } from 'formik'; \nimport { TextField } from '../TextField/textfield';\nimport * as Yup from 'yup';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport users from \"../Data/users\";\nimport userEvent from \"@testing-library/user-event\";\n\n\nfunction CreateAccount() {\n    const { user } = useContext(UserContext);\n    \n    const [users, setUsers] = useState(user);\n    \n    const validate = Yup.object({\n        name: Yup.string()\n            .required('Required'),\n        \n        email: Yup.string().email('Write in email format')\n            .required('Email is required'),\n            \n\n        password: Yup.string()\n            .min(8, 'Must be at least 8 characters')\n            .required('Password is required'),\n\n        confirmPassword: Yup.string()\n            .oneOf([Yup.ref('password'), null], \"Confirm same Password\")\n            .required('Confirm password required'),\n    });\n    \n    const addUser = (user) => {\n    \n        setUsers([...users, { ...user}]);\n        console.log(users);\n\n    }\n\n    \n\n    return(\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col align-self-center\">\n                    <Card\n                        bgcolor=\"info\"\n                        header=\"Create An Account\"\n                        title=\"Fill in the following information\"\n                        body={\n                             (\n                            <>\n                                <Formik\n                                    initialValues={{\n                                        name: \"\",\n                                        email: \"\",\n                                        password: \"\",\n                                        confirmPassword:\"\"\n                                    }}\n                                    validationSchema={validate}\n                                    onSubmit={(values, {resetForm}) => {\n                                        addUser({\n                                            id: uuidv4(),\n                                            ...values,\n                                        });\n                                        user.push({\n                                            id: uuidv4(),\n                                            ...values,\n                                        });\n\n                                        resetForm({values: \"\"});\n                                    }}\n                                >\n                                    { formik => (\n                                        <div>\n                                        \n                                            <Form>\n                                                <TextField label=\"Name\" name=\"name\" type=\"text\"  />\n                                                <TextField label=\"Email\" name=\"email\" type=\"email\" />\n                                                <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                                                <TextField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\"/>\n                                                \n                                                <button className=\"btn btn-secondary mt-5\" type=\"submit\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" disabled={!formik.isValid || formik.isSubmitting || !formik.initialStatus} >Create Account</button>\n                                                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                                <div className=\"modal-dialog\">\n                                                    <div className=\"modal-content\">\n                                                    <div className=\"modal-header\">\n                                                        <h5 className=\"modal-title text-info\" id=\"exampleModalLabel\">ACCOUNT CREATED!!!</h5>\n                                                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                                                    </div>\n                                                    <div className=\"modal-body\">\n                                                        <p className=\"text-info\"> You have successfully attempted to create an account, would you like to create another one?</p>\n                                                    </div>\n                                                    <div className=\"modal-footer\">\n                                                        <button type=\"button\" className=\"btn btn-info text-white\" data-bs-dismiss=\"modal\">Yes Please!</button>\n                                                    </div>\n                                                    </div>\n                                                </div>\n                                                </div>\n                                            </Form>\n                                        </div>\n                                    )\n\n                                    }\n                                </Formik>\n\n                            </>\n                        )}\n                    />\n                </div>\n            </div>\n        </div>\n        \n    );\n}\n\n\nexport { CreateAccount };"]},"metadata":{},"sourceType":"module"}