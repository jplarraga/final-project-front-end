{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport TransactionContext from \"../../Context/TransactionContext\";\nimport { Card } from '../../Card/card';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Template({\n  title,\n  bgcolor,\n  txtcolor,\n  header,\n  showImage,\n  showBalance,\n  showDeposit,\n  showWithdraw\n}) {\n  _s();\n\n  const {\n    data\n  } = useContext(TransactionContext);\n  const [transactionsList, setTransactionsList] = useState(data);\n  const [deposit, setDeposit] = useState(0);\n  const [totalState, setTotalState] = useState(Number([data[0].balance]));\n  const [validTransaction, setValidTransaction] = useState(true);\n\n  const handleDepositChange = event => {\n    if (deposit <= 0) {\n      setDeposit(0);\n    } else {\n      setDeposit(Number(event.target.value));\n    }\n\n    setValidTransaction(true);\n    if (event.target.value <= 0) return;\n  };\n\n  const handleDepositSubmit = event => {\n    let newTotal = totalState + deposit;\n    setTotalState(newTotal);\n    setValidTransaction(true);\n    event.preventDefault();\n  };\n}\n\n_s(Template, \"+3fmUsdNzEOFnCqfPnunoBZ9AYw=\");\n\n_c = Template;\n\nvar _c;\n\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"sources":["/Users/usuario/Desktop/CURSO_MERN/Proyecto Front End Banking Application/Banking_Application/banking-application/src/components/Main/Template/template.jsx"],"names":["React","useContext","useState","TransactionContext","Card","v4","uuidv4","Template","title","bgcolor","txtcolor","header","showImage","showBalance","showDeposit","showWithdraw","data","transactionsList","setTransactionsList","deposit","setDeposit","totalState","setTotalState","Number","balance","validTransaction","setValidTransaction","handleDepositChange","event","target","value","handleDepositSubmit","newTotal","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA4B,MAA5B;;AAEA,SAASC,QAAT,CAAkB;AACdC,EAAAA,KADc;AAEdC,EAAAA,OAFc;AAGdC,EAAAA,QAHc;AAIdC,EAAAA,MAJc;AAKdC,EAAAA,SALc;AAMdC,EAAAA,WANc;AAOdC,EAAAA,WAPc;AAQdC,EAAAA;AARc,CAAlB,EASG;AAAA;;AAEC,QAAM;AAAEC,IAAAA;AAAF,MAAWf,UAAU,CAACE,kBAAD,CAA3B;AAEA,QAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,CAACc,IAAD,CAAxD;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAACqB,MAAM,CAAC,CAACP,IAAI,CAAC,CAAD,CAAJ,CAAQQ,OAAT,CAAD,CAAP,CAA5C;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CxB,QAAQ,CAAC,IAAD,CAAxD;;AAGA,QAAMyB,mBAAmB,GAAIC,KAAD,IAAW;AACnC,QAAGT,OAAO,IAAI,CAAd,EAAgB;AACZC,MAAAA,UAAU,CAAC,CAAD,CAAV;AACH,KAFD,MAEO;AACHA,MAAAA,UAAU,CAACG,MAAM,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CAAV;AACH;;AACDJ,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAEA,QAAGE,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB,CAAzB,EAA4B;AAC/B,GATD;;AAYA,QAAMC,mBAAmB,GAAIH,KAAD,IAAW;AACnC,QAAII,QAAQ,GAAGX,UAAU,GAAGF,OAA5B;AACAG,IAAAA,aAAa,CAACU,QAAD,CAAb;AACAN,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAE,IAAAA,KAAK,CAACK,cAAN;AACH,GALD;AASH;;GAxCQ1B,Q;;KAAAA,Q","sourcesContent":["import React, {useContext, useState} from \"react\";\nimport TransactionContext from \"../../Context/TransactionContext\";\nimport { Card } from '../../Card/card';\nimport {v4 as uuidv4 } from 'uuid';\n\nfunction Template({\n    title,\n    bgcolor,\n    txtcolor,\n    header,\n    showImage,\n    showBalance,\n    showDeposit,\n    showWithdraw\n}) {\n\n    const { data } = useContext(TransactionContext);\n\n    const [transactionsList, setTransactionsList] = useState(data);\n    const [deposit, setDeposit] = useState(0);\n    const [totalState, setTotalState] = useState(Number([data[0].balance]));\n    const [validTransaction, setValidTransaction] = useState(true);\n\n\n    const handleDepositChange = (event) => {\n        if(deposit <= 0){\n            setDeposit(0)\n        } else {\n            setDeposit(Number(event.target.value));\n        }\n        setValidTransaction(true);\n        \n        if(event.target.value <= 0) return;\n    };\n\n\n    const handleDepositSubmit = (event) => {\n        let newTotal = totalState + deposit;\n        setTotalState(newTotal);\n        setValidTransaction(true);\n        event.preventDefault();\n    }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}